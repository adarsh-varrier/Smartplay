{"ast":null,"code":"var _jsxFileName = \"E:\\\\Smartplay\\\\frontend\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Prepare the data to send to the backend\n    const loginData = {\n      email: email,\n      password: password\n    };\n\n    // Send a POST request to the Django login view\n    fetch(\"http://127.0.0.1:8000/api/login/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(loginData)\n    }).then(response => response.json()).then(data => {\n      if (response.ok) {\n        // If login is successful\n        setMessage(\"Logged in successfully\");\n        setError('');\n        // Store the session (handled automatically by Django, no need to store token)\n        // You can store user data or anything you'd like\n        localStorage.setItem(\"user_type\", data.user_type);\n        // Redirect to dashboard or another page\n        window.location.href = \"/dashboard\";\n      } else {\n        // If login failed\n        setError(\"Invalid credentials\");\n        setMessage('');\n      }\n    }).catch(error => {\n      setError(\"Error occurred while logging in.\");\n      setMessage('');\n      console.error(\"Error:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: handleEmailChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: handlePasswordChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"C+oSCV+RZXIw3AX6YtoXio2ViMQ=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","message","setMessage","handleEmailChange","e","target","value","handlePasswordChange","handleSubmit","preventDefault","loginData","fetch","method","headers","body","JSON","stringify","then","response","json","data","ok","localStorage","setItem","user_type","window","location","href","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","style","color","_c","$RefreshReg$"],"sources":["E:/Smartplay/frontend/src/components/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Prepare the data to send to the backend\r\n        const loginData = {\r\n            email: email,\r\n            password: password\r\n        };\r\n\r\n        // Send a POST request to the Django login view\r\n        fetch(\"http://127.0.0.1:8000/api/login/\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(loginData)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            if (response.ok) {\r\n                // If login is successful\r\n                setMessage(\"Logged in successfully\");\r\n                setError('');\r\n                // Store the session (handled automatically by Django, no need to store token)\r\n                // You can store user data or anything you'd like\r\n                localStorage.setItem(\"user_type\", data.user_type);\r\n                // Redirect to dashboard or another page\r\n                window.location.href = \"/dashboard\";\r\n            } else {\r\n                // If login failed\r\n                setError(\"Invalid credentials\");\r\n                setMessage('');\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            setError(\"Error occurred while logging in.\");\r\n            setMessage('');\r\n            console.error(\"Error:\", error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"email\">Email: </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={handleEmailChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">Password: </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={handlePasswordChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n\r\n            {error && <div style={{ color: 'red' }}>{error}</div>}\r\n            {message && <div style={{ color: 'green' }}>{message}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}